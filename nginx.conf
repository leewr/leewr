
user  root;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
error_log /var/log/nginx/error.log;

pid        logs/nginx.pid;

#pid /run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip on;
    gzip_min_length  5k;
    gzip_buffers     4 16k;
    #gzip_http_version 1.0;
    gzip_comp_level 3;
    gzip_types       text/plain application/json application/javascript text/css application/xml text/javascript application/x-httpd-php;
    gzip_vary on;
    gzip_static  on;
    rewrite_log on;
    map $http_accept $webp_suffix {
        default   "";
        "~*webp"  ".webp";
    }
    #pagespeed on;
    #pagespeed FileCachePath "/var/cache/ngx_pagespeed/";

    server {
        listen       80;
        listen       [::]:80 default_server;
        #listen 443 ssl;
        server_name  leewr.com;
        root         /usr/share/nginx/html;
        #ssl_certificate /etc/ssl/private/leewr.com.crt;
        #ssl_certificate_key /etc/ssl/private/leewr.com.key;

        #pagespeed EnableFilters convert_png_to_jpeg,convert_jpeg_to_webp;
        #charset koi8-r;

        #access_log  logs/host.access.log  main;
        location / {
            proxy_pass http://127.0.0.1:7001;
            proxy_set_header Host $host:80;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    server {
       listen 80;
       server_name wxchart.leewr.com;
       root         /usr/share/nginx/wxchart;
        #pagespeed EnableFilters convert_png_to_jpeg,convert_jpeg_to_webp;
        location / {
             proxy_pass http://localhost:8881;
        }
        location ~* ^/images/.+\.(png|jpg)$ {
          add_header Vary Accept;
          
          try_files $uri$webp_suffix $uri =404;
        }

       error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

    server {
        listen 8881;
        server_name wxchart;
        root /usr/share/nginx/wxchart;
        error_page 404 /404.html;
            location = /40x.html {
        }
        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

    server {
        listen 80;
        server_name img.leewr.com;
        root /home/leewr/mono/app;
        access_log /usr/local/nginx/logs/images.log main;
        #listen 443 ssl;
        #ssl on;
        #ssl_certificate /etc/ssl/private/leewr.com.crt;
        #ssl_certificate_key /etc/ssl/private/leewr.com.key;

        location / {
            # try_files $uri /index.html;
            # if ($webp_suffix ~* true) {
            #     add_header Set-Cookie 'webpAvaile=true; path= /; expires=31536000';
            # }
        }

        # 更换采用lua + GraphicsMagick 方案压缩图片，解决不支持webp图片剪切的问题
        location ~* (.*)!(\d+)x(\d+)\.(JPG|jpg|gif|png|PNG)$ {
            #root /home/leewr/mono/app;
            set $path $1;
            set $img_width $2;
            set $img_height $3;
            #content_by_lua 'ngx.say("hello Lua")';
            #content_by_lua_block {
                #ngx.say(ngx.var.path..ngx.var.img_width..ngx.var.img_height)
            #}
            rewrite (.*)!(\d+)x(\d+)\.(JPG|jpg|gif|png|PNG)$ $1 break;
            image_filter resize $img_width $img_height;
            image_filter crop $img_width $img_height;
            image_filter_buffer 10M;
        }
        location /img/ {
            image_filter resize 150 100;
            image_filter rotate 90;
        }
        location /lua1 {
           default_type 'text/plain';
           content_by_lua 'ngx.say("hello Lua")';
        }

        # location ~ ^(.+\.(jpg|jpeg|png))$ {
        #     add_header Vary Accept;
        #     #try_files $uri.$webp_suffix $uri =404;
        # }

        location ~* ^(.+\.(jpg|jpeg|gif|png))_(\d+)x(\d+)(f?)\.(jpg|jpeg|gif|png)(\.webp)?$ {
            root /home/leewr/mono/app;
            #default_type 'text/plain';
            
            if (!-f $request_filename) {
                access_log /usr/local/nginx/logs/ImageResizer.log main;
                add_header X-Powered-By 'Lua GraphicsMagick';    # 此 HTTP Header 无实际意义，用于测试
                add_header file-path $request_filename;    # 此 HTTP Header 无实际意义，用于测试
                #lua_code_cache off; # 在编写外部 Lua 脚本时，设置为 off Nginx 不会缓存 Lua，方便调试
                set $request_filepath /home/leewr/mono/app$1;    # 设置原始图片路径，如：/document_root/1.gif
                set $width $3;    # 设置裁剪/缩放的宽度
                set $height $4;    # 设置裁剪/缩放的高度
                set $enforce $5; # 是否强制裁剪
                set $ext $6;    # 图片文件格式后缀
                set $webp $7; # 支持webp返回webp图片格式图片
                content_by_lua_file lua/ImageResizer.lua;
            }
            # add_header Vary Accept;
            # try_files $uri$webp_suffix $uri =404;
        }

        # location ~* ^(.+\.(jpg|png|jpeg|gif))(.webp)$ {
        #     if (!-f $request_filename) {
        #         access_log /usr/local/nginx/logs/ImageResizer.log main;
        #         add_header X-Powered-By 'Lua GraphicsMagick';    # 此 HTTP Header 无实际意义，用于测试
        #         add_header file-path $request_filename;    # 此 HTTP Header 无实际意义，用于测试
        #         set $request_filepath /home/leewr/mono/app$1;    # 设置原始图片路径，如：/document_root/1.gif
        #         set $ext $3;
        #         content_by_lua_file lua/webp.lua;
        #     }
        # }


        error_page 404 /404.html;
            location = /40x.html {
        }
        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

    server {
        listen 80;
        server_name m.leewr.com;
       
        
        #listen 443 ssl;
        #ssl on;
        #ssl_certificate /etc/ssl/private/leewr.com.crt;
        #ssl_certificate_key /etc/ssl/private/leewr.com.key;

        root /home/leewr/mono/mono/build;
        error_page 404 /404.html;
            location = /40x.html {
        }
        # add_header Set-Cookie 'webpAvaile=$webp_suffix; path= /; expires=31536000';
        location / {
            # try_files $uri /index.html;
            # if ($http_accept ~* webp) {
            #     #add_header Set-Cookie 'webpAvaile=true; path= /; expires=31536000';
            # }
            try_files $uri /index.html;
        }
        location ~* ^(\.(jpg|png|jpeg|gif))$ {
            try_files $uri$webp_suffix $uri = 404;
        }

        location /api/ {
             proxy_pass http://localhost:7001/api/;
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

    server {
        listen       80;
        server_name  webp.leewr.com;
        root         /home/leewr/mono/app/public/december;
        # add_header Set-Cookie 'webpAvaile=$webp_suffix; path= /; expires=31536000';
        location / {
            if ($webp_suffix ~* webp) {
                #add_header Set-Cookie 'webpAvaile=webp; path= /;  expires=3153600';
            }
        }
        
        location ~* ^(.+\.(jpg|png|jpeg|gif))$ {
            add_header Vary Accept;
            if ($http_accept !~* "webp") {
             break;
            }
            rewrite ^(.+\.(jpg|png|jpeg|gif))$  $uri$webp_suffix  last;
            # try_files $uri$webp_suffix $uri;
        }

        location ~* ^(.+\.(jpg|png|jpeg|gif))(\.webp)$ { # 正则匹配图片 paht/name.jpg.webp 格式的图片请求
            if (!-f $request_filename) { # 如果图片不存在
                access_log /usr/local/nginx/logs/december.log main; # 设置日志文件
                set $request_filepath /home/leewr/mono/app/public/december/$1; # 图片真实路径变量
                set $ext $3; # 设置图片扩展名$ext变量
                content_by_lua_file lua/webp.lua; # 调用nginx/lua目录下的webp.lua文件
            }
        }

        
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
